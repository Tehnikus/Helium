{{ header }}
{% include 'helium/template/common/breadcrumbs.twig' %}
<main role="main" id="account-register">

  {% if error_warning %}
    <div role="alert" class="alert-danger"><i class="icon-alert"></i> {{ error_warning }}</div>
  {% endif %}

  <h1>{{ heading_title }}</h1>
  {{ content_top }}
  <p>{{ text_account_already }}</p>
  <form action="{{ action }}" method="post" enctype="multipart/form-data" >
    <fieldset id="account">
      <legend>{{ text_your_details }}</legend>
      <div class="form-group required" style="display: {% if customer_groups|length > 1 %} block {% else %} none {% endif %};">
        <label>{{ entry_customer_group }}</label>
        <div class="col-sm-10">{% for customer_group in customer_groups %}
          {% if customer_group.customer_group_id == customer_group_id %}
          <div class="form-control">
            <label>
              <input type="radio" name="customer_group_id" value="{{ customer_group.customer_group_id }}" checked="checked" />
              {{ customer_group.name }}</label>
          </div>
          {% else %}
          <div class="form-control">
            <label>
              <input type="radio" name="customer_group_id" value="{{ customer_group.customer_group_id }}" />
              {{ customer_group.name }}</label>
          </div>
          {% endif %}
          {% endfor %}</div>
      </div>


      {% include 'helium/template/common/fields/firstname.twig' with {required: true, type: 'payment'} %}
      {% include 'helium/template/common/fields/lastname.twig'  with {required: true, type: 'payment'} %}
      {% include 'helium/template/common/fields/email.twig'     with {required: true, type: 'payment'} %}
      {% include 'helium/template/common/fields/telephone.twig' with {required: true, type: 'payment'} %}
      {% include 'helium/template/common/custom_fields.twig'    with {type: 'register', location: 'account'} %}


      
    </fieldset>

    <fieldset>
      <legend>{{ text_your_password }}</legend>
      {% include 'helium/template/common/fields/password.twig' with {new_password: true} %}
      {# <div class="form-group required">
        <label for="input-password">{{ entry_password }}</label>
        <input type="password" name="password" value="{{ password }}" placeholder="{{ entry_password }}" id="input-password" autocomplete="new-password"/>
        {% if error_password %}
          <span role="alert" class="text-danger">{{ error_password }}</span>
        {% endif %} 
      </div>
      <div class="form-group required">
        <label for="input-confirm">{{ entry_confirm }}</label>
        <input type="password" name="confirm" value="{{ confirm }}" placeholder="{{ entry_confirm }}" id="input-confirm" autocomplete="new-password"/>
        {% if error_confirm %}
          <span role="alert" class="text-danger">{{ error_confirm }}</span>
        {% endif %}
      </div> #}
    </fieldset>

    <fieldset>
      <legend>{{ text_newsletter }}</legend>
      <div class="form-group">
        <label>{{ entry_newsletter }}</label>
        <div class="col-sm-10"> {% if newsletter %}
          <label>
            <input type="radio" name="newsletter" value="1" checked="checked" />
            {{ text_yes }}</label>
          <label>
            <input type="radio" name="newsletter" value="0" />
            {{ text_no }}</label>
          {% else %}
          <label>
            <input type="radio" name="newsletter" value="1" />
            {{ text_yes }}</label>
          <label>
            <input type="radio" name="newsletter" value="0" checked="checked" />
            {{ text_no }}</label>
          {% endif %} </div>
      </div>
    </fieldset>
    {{ captcha }}
    {% if text_agree %}
    <div class="buttons">
      <div class="pull-right">{{ text_agree }}
        {% if agree %}
        <input type="checkbox" name="agree" value="1" checked="checked" />
        {% else %}
        <input type="checkbox" name="agree" value="1" />
        {% endif %}
        &nbsp;
        <button type="submit" class="primary">{{ button_continue }}</button>
      </div>
    </div>
    {% else %}
      <button type="submit" class="primary">{{ button_continue }}</button>
    {% endif %}
  </form>
  {{ content_bottom }}
</main>
{{ column_left }}
{{ column_right }}
<script type="text/javascript"><!--
// Sort the custom fields
// $('#account .form-group[data-sort]').detach().each(function() {
// 	if ($(this).attr('data-sort') >= 0 && $(this).attr('data-sort') <= $('#account .form-group').length) {
// 		$('#account .form-group').eq($(this).attr('data-sort')).before(this);
// 	}

// 	if ($(this).attr('data-sort') > $('#account .form-group').length) {
// 		$('#account .form-group:last').after(this);
// 	}

// 	if ($(this).attr('data-sort') == $('#account .form-group').length) {
// 		$('#account .form-group:last').after(this);
// 	}

// 	if ($(this).attr('data-sort') < -$('#account .form-group').length) {
// 		$('#account .form-group:first').before(this);
// 	}
// });

// $('input[name=\'customer_group_id\']').on('change', function() {
// 	$.ajax({
// 		url: 'index.php?route=account/register/customfield&customer_group_id=' + this.value,
// 		dataType: 'json',
// 		success: function(json) {
// 			$('.custom-field').hide();
// 			$('.custom-field').removeClass('required');

// 			for (i = 0; i < json.length; i++) {
// 				custom_field = json[i];

// 				$('#custom-field' + custom_field['custom_field_id']).show();

// 				if (custom_field['required']) {
// 					$('#custom-field' + custom_field['custom_field_id']).addClass('required');
// 				}
// 			}
// 		},
// 		error: function(xhr, ajaxOptions, thrownError) {
// 			alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
// 		}
// 	});
// });

// $('input[name=\'customer_group_id\']:checked').trigger('change');
//--></script> 
<script type="text/javascript"><!--
// $('button[id^=\'button-custom-field\']').on('click', function() {
// 	var element = this;

// 	$('#form-upload').remove();

// 	$('body').prepend('<form enctype="multipart/form-data" id="form-upload" style="display: none;"><input type="file" name="file" /></form>');

// 	$('#form-upload input[name=\'file\']').trigger('click');

// 	if (typeof timer != 'undefined') {
//     	clearInterval(timer);
// 	}

// 	timer = setInterval(function() {
// 		if ($('#form-upload input[name=\'file\']').val() != '') {
// 			clearInterval(timer);

// 			$.ajax({
// 				url: 'index.php?route=tool/upload',
// 				type: 'post',
// 				dataType: 'json',
// 				data: new FormData($('#form-upload')[0]),
// 				cache: false,
// 				contentType: false,
// 				processData: false,
// 				beforeSend: function() {
// 					$(element).button('loading');
// 				},
// 				complete: function() {
// 					$(element).button('reset');
// 				},
// 				success: function(json) {
// 					$(element).parent().find('.text-danger').remove();

// 					if (json['error']) {
// 						$(node).parent().find('input').after('<span class="text-danger">' + json['error'] + '</div>');
// 					}

// 					if (json['success']) {
// 						alert(json['success']);

// 						$(element).parent().find('input').val(json['code']);
// 					}
// 				},
// 				error: function(xhr, ajaxOptions, thrownError) {
// 					alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
// 				}
// 			});
// 		}
// 	}, 500);
});
//--></script> 
<script type="text/javascript"><!--
// $('.date').datetimepicker({
// 	language: '{{ datepicker }}',
// 	pickTime: false
// });

// $('.time').datetimepicker({
// 	language: '{{ datepicker }}',
// 	pickDate: false
// });

// $('.datetime').datetimepicker({
// 	language: '{{ datepicker }}',
// 	pickDate: true,
// 	pickTime: true
// });
//--></script> 
{{ footer }} 